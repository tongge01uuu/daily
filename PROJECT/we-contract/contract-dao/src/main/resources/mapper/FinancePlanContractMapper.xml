<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.we.contract.dao.FinancePlanContractMapper" >
  <resultMap id="BaseResultMap" type="com.we.contract.entity.FinancePlanContract" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="finance_plan_id" property="financePlanId" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="reserve_amount" property="reserveAmount" jdbcType="DECIMAL" />
    <result column="sub_point_type" property="subPointType" jdbcType="VARCHAR" />
    <result column="md5_value" property="md5Value" jdbcType="VARCHAR" />
    <result column="salt_value" property="saltValue" jdbcType="VARCHAR" />
    <result column="file_path" property="filePath" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, code, create_time, finance_plan_id, update_time, user_id, type, reserve_amount, 
    sub_point_type, md5_value, salt_value, file_path
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.we.contract.entity.FinancePlanContractExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from finance_plan_contract
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from finance_plan_contract
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from finance_plan_contract
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.we.contract.entity.FinancePlanContractExample" >
    delete from finance_plan_contract
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.we.contract.entity.FinancePlanContract" >
    insert into finance_plan_contract (id, code, create_time, 
      finance_plan_id, update_time, user_id, 
      type, reserve_amount, sub_point_type, 
      md5_value, salt_value, file_path
      )
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, NOW(),
      #{financePlanId,jdbcType=INTEGER}, NOW(), #{userId,jdbcType=INTEGER},
      #{type,jdbcType=VARCHAR}, #{reserveAmount,jdbcType=DECIMAL}, #{subPointType,jdbcType=VARCHAR}, 
      #{md5Value,jdbcType=VARCHAR}, #{saltValue,jdbcType=VARCHAR}, #{filePath,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.we.contract.entity.FinancePlanContract" >
    insert into finance_plan_contract
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="financePlanId != null" >
        finance_plan_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="reserveAmount != null" >
        reserve_amount,
      </if>
      <if test="subPointType != null" >
        sub_point_type,
      </if>
      <if test="md5Value != null" >
        md5_value,
      </if>
      <if test="saltValue != null" >
        salt_value,
      </if>
      <if test="filePath != null" >
        file_path,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
        NOW(),
      <if test="financePlanId != null" >
        #{financePlanId,jdbcType=INTEGER},
      </if>
        NOW(),
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="reserveAmount != null" >
        #{reserveAmount,jdbcType=DECIMAL},
      </if>
      <if test="subPointType != null" >
        #{subPointType,jdbcType=VARCHAR},
      </if>
      <if test="md5Value != null" >
        #{md5Value,jdbcType=VARCHAR},
      </if>
      <if test="saltValue != null" >
        #{saltValue,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null" >
        #{filePath,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.we.contract.entity.FinancePlanContractExample" resultType="java.lang.Integer" >
    select count(*) from finance_plan_contract
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update finance_plan_contract
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.financePlanId != null" >
        finance_plan_id = #{record.financePlanId,jdbcType=INTEGER},
      </if>
        update_time = NOW(),
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.reserveAmount != null" >
        reserve_amount = #{record.reserveAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.subPointType != null" >
        sub_point_type = #{record.subPointType,jdbcType=VARCHAR},
      </if>
      <if test="record.md5Value != null" >
        md5_value = #{record.md5Value,jdbcType=VARCHAR},
      </if>
      <if test="record.saltValue != null" >
        salt_value = #{record.saltValue,jdbcType=VARCHAR},
      </if>
      <if test="record.filePath != null" >
        file_path = #{record.filePath,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update finance_plan_contract
    set id = #{record.id,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      finance_plan_id = #{record.financePlanId,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      reserve_amount = #{record.reserveAmount,jdbcType=DECIMAL},
      sub_point_type = #{record.subPointType,jdbcType=VARCHAR},
      md5_value = #{record.md5Value,jdbcType=VARCHAR},
      salt_value = #{record.saltValue,jdbcType=VARCHAR},
      file_path = #{record.filePath,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.we.contract.entity.FinancePlanContract" >
    update finance_plan_contract
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="financePlanId != null" >
        finance_plan_id = #{financePlanId,jdbcType=INTEGER},
      </if>
        update_time = NOW(),
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="reserveAmount != null" >
        reserve_amount = #{reserveAmount,jdbcType=DECIMAL},
      </if>
      <if test="subPointType != null" >
        sub_point_type = #{subPointType,jdbcType=VARCHAR},
      </if>
      <if test="md5Value != null" >
        md5_value = #{md5Value,jdbcType=VARCHAR},
      </if>
      <if test="saltValue != null" >
        salt_value = #{saltValue,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null" >
        file_path = #{filePath,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.we.contract.entity.FinancePlanContract" >
    update finance_plan_contract
    set code = #{code,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      finance_plan_id = #{financePlanId,jdbcType=INTEGER},
      update_time = NOW(),
      user_id = #{userId,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      reserve_amount = #{reserveAmount,jdbcType=DECIMAL},
      sub_point_type = #{subPointType,jdbcType=VARCHAR},
      md5_value = #{md5Value,jdbcType=VARCHAR},
      salt_value = #{saltValue,jdbcType=VARCHAR},
      file_path = #{filePath,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>